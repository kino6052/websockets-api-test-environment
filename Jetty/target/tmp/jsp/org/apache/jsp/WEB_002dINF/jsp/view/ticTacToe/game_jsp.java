/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.0.M2
 * Generated at: 2017-05-12 22:05:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.view.ticTacToe;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class game_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/WEB-INF/jsp/base.jspf", Long.valueOf(1494602732594L));
    _jspx_dependants.put("file:/C:/Users/kiril/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.jar", Long.valueOf(1475266369771L));
    _jspx_dependants.put("jar:file:/C:/Users/kiril/.m2/repository/org/glassfish/web/javax.servlet.jsp.jstl/1.2.2/javax.servlet.jsp.jstl-1.2.2.jar!/META-INF/fn.tld", Long.valueOf(1343841418000L));
    _jspx_dependants.put("jar:file:/C:/Users/kiril/ISONAS/websockets-api-test-environment/Jetty/target/game-site-001/WEB-INF/lib/javax.servlet.jsp.jstl-1.2.2.jar!/META-INF/c.tld", Long.valueOf(1343841418000L));
    _jspx_dependants.put("file:/C:/Users/kiril/ISONAS/websockets-api-test-environment/Jetty/target/game-site-001/WEB-INF/lib/javax.servlet.jsp.jstl-1.2.2.jar", Long.valueOf(1494603381939L));
    _jspx_dependants.put("jar:file:/C:/Users/kiril/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.jar!/META-INF/fmt.tld", Long.valueOf(1384393662000L));
    _jspx_dependants.put("file:/C:/Users/kiril/.m2/repository/org/glassfish/web/javax.servlet.jsp.jstl/1.2.2/javax.servlet.jsp.jstl-1.2.2.jar", Long.valueOf(1494603381939L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <title>Game Site :: Tic Tac Toe</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.1/css/bootstrap.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\"\n");
      out.write("              href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" />\n");
      out.write("        <script src=\"http://code.jquery.com/jquery-1.9.1.js\"></script>\n");
      out.write("        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.1/js/bootstrap.min.js\"></script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <h2>Tic Tac Toe</h2>\n");
      out.write("        <span class=\"player-label\">You:</span> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\n");
      out.write("        <span class=\"player-label\">Opponent:</span>\n");
      out.write("        <span id=\"opponent\"><i>Waiting</i></span>\n");
      out.write("        <div id=\"status\">&nbsp;</div>\n");
      out.write("        <div id=\"gameContainer\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div id=\"r0c0\" class=\"game-cell\" onclick=\"move(0, 0);\">&nbsp;</div>\n");
      out.write("                <div id=\"r0c1\" class=\"game-cell\" onclick=\"move(0, 1);\">&nbsp;</div>\n");
      out.write("                <div id=\"r0c2\" class=\"game-cell\" onclick=\"move(0, 2);\">&nbsp;</div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div id=\"r1c0\" class=\"game-cell\" onclick=\"move(1, 0);\">&nbsp;</div>\n");
      out.write("                <div id=\"r1c1\" class=\"game-cell\" onclick=\"move(1, 1);\">&nbsp;</div>\n");
      out.write("                <div id=\"r1c2\" class=\"game-cell\" onclick=\"move(1, 2);\">&nbsp;</div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div id=\"r2c0\" class=\"game-cell\" onclick=\"move(2, 0);\">&nbsp;</div>\n");
      out.write("                <div id=\"r2c1\" class=\"game-cell\" onclick=\"move(2, 1);\">&nbsp;</div>\n");
      out.write("                <div id=\"r2c2\" class=\"game-cell\" onclick=\"move(2, 2);\">&nbsp;</div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"modalWaiting\" class=\"modal hide fade\">\n");
      out.write("            <div class=\"modal-header\"><h3>Please Wait...</h3></div>\n");
      out.write("            <div class=\"modal-body\" id=\"modalWaitingBody\">&nbsp;</div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"modalError\" class=\"modal hide fade\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;\n");
      out.write("                </button>\n");
      out.write("                <h3>Error</h3>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\" id=\"modalErrorBody\">A blah error occurred.\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button class=\"btn btn-primary\" data-dismiss=\"modal\">OK</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"modalGameOver\" class=\"modal hide fade\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;\n");
      out.write("                </button>\n");
      out.write("                <h3>Game Over</h3>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\" id=\"modalGameOverBody\">&nbsp;</div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button class=\"btn btn-primary\" data-dismiss=\"modal\">OK</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/javascript\" language=\"javascript\">\n");
      out.write("            var move;\n");
      out.write("            $(document).ready(function() {\n");
      out.write("                var modalError = $(\"#modalError\");\n");
      out.write("                var modalErrorBody = $(\"#modalErrorBody\");\n");
      out.write("                var modalWaiting = $(\"#modalWaiting\");\n");
      out.write("                var modalWaitingBody = $(\"#modalWaitingBody\");\n");
      out.write("                var modalGameOver = $(\"#modalGameOver\");\n");
      out.write("                var modalGameOverBody = $(\"#modalGameOverBody\");\n");
      out.write("                var opponent = $(\"#opponent\");\n");
      out.write("                var status = $(\"#status\");\n");
      out.write("                var opponentUsername;\n");
      out.write("                var username = '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("';\n");
      out.write("                var myTurn = false;\n");
      out.write("\n");
      out.write("                $('.game-cell').addClass('span1');\n");
      out.write("\n");
      out.write("                if(!(\"WebSocket\" in window))\n");
      out.write("                {\n");
      out.write("                    modalErrorBody.text('WebSockets are not supported in this ' +\n");
      out.write("                            'browser. Try Internet Explorer 10 or the latest ' +\n");
      out.write("                            'versions of Mozilla Firefox or Google Chrome.');\n");
      out.write("                    modalError.modal('show');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                modalWaitingBody.text('Connecting to the server.');\n");
      out.write("                modalWaiting.modal({ keyboard: false, show: true });\n");
      out.write("\n");
      out.write("                var server;\n");
      out.write("                try {\n");
      out.write("                    server = new WebSocket('ws://' + window.location.host +\n");
      out.write("                            '");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("                } catch(error) {\n");
      out.write("                    modalWaiting.modal('hide');\n");
      out.write("                    modalErrorBody.text(error);\n");
      out.write("                    modalError.modal('show');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                server.onopen = function(event) {\n");
      out.write("                    modalWaitingBody\n");
      out.write("                            .text('Waiting on your opponent to join the game.');\n");
      out.write("                    modalWaiting.modal({ keyboard: false, show: true });\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                window.onbeforeunload = function() {\n");
      out.write("                    server.close();\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                server.onclose = function(event) {\n");
      out.write("                    if(!event.wasClean || event.code != 1000) {\n");
      out.write("                        toggleTurn(false, 'Game over due to error!');\n");
      out.write("                        modalWaiting.modal('hide');\n");
      out.write("                        modalErrorBody.text('Code ' + event.code + ': ' +\n");
      out.write("                                event.reason);\n");
      out.write("                        modalError.modal('show');\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                server.onerror = function(event) {\n");
      out.write("                    modalWaiting.modal('hide');\n");
      out.write("                    modalErrorBody.text(event.data);\n");
      out.write("                    modalError.modal('show');\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                server.onmessage = function(event) {\n");
      out.write("                    var message = JSON.parse(event.data);\n");
      out.write("                    if(message.action == 'gameStarted') {\n");
      out.write("                        if(message.game.player1 == username)\n");
      out.write("                            opponentUsername = message.game.player2;\n");
      out.write("                        else\n");
      out.write("                            opponentUsername = message.game.player1;\n");
      out.write("                        opponent.text(opponentUsername);\n");
      out.write("                        toggleTurn(message.game.nextMoveBy == username);\n");
      out.write("                        modalWaiting.modal('hide');\n");
      out.write("                    } else if(message.action == 'opponentMadeMove') {\n");
      out.write("                        $('#r' + message.move.row + 'c' + message.move.column)\n");
      out.write("                                .unbind('click')\n");
      out.write("                                .removeClass('game-cell-selectable')\n");
      out.write("                                .addClass('game-cell-opponent game-cell-taken');\n");
      out.write("                        toggleTurn(true);\n");
      out.write("                    } else if(message.action == 'gameOver') {\n");
      out.write("                        toggleTurn(false, 'Game Over!');\n");
      out.write("                        if(message.winner) {\n");
      out.write("                            modalGameOverBody.text('Congratulations, you won!');\n");
      out.write("                        } else {\n");
      out.write("                            modalGameOverBody.text('User \"' + opponentUsername +\n");
      out.write("                                    '\" won the game.');\n");
      out.write("                        }\n");
      out.write("                        modalGameOver.modal('show');\n");
      out.write("                    } else if(message.action == 'gameIsDraw') {\n");
      out.write("                        toggleTurn(false, 'The game is a draw. ' +\n");
      out.write("                                'There is no winner.');\n");
      out.write("                        modalGameOverBody.text('The game ended in a draw. ' +\n");
      out.write("                                'Nobody wins!');\n");
      out.write("                        modalGameOver.modal('show');\n");
      out.write("                    } else if(message.action == 'gameForfeited') {\n");
      out.write("                        toggleTurn(false, 'Your opponent forfeited!');\n");
      out.write("                        modalGameOverBody.text('User \"' + opponentUsername +\n");
      out.write("                                '\" forfeited the game. You win!');\n");
      out.write("                        modalGameOver.modal('show');\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                var toggleTurn = function(isMyTurn, message) {\n");
      out.write("                    myTurn = isMyTurn;\n");
      out.write("                    if(myTurn) {\n");
      out.write("                        status.text(message || 'It\\'s your move!');\n");
      out.write("                        $('.game-cell:not(.game-cell-taken)')\n");
      out.write("                                .addClass('game-cell-selectable');\n");
      out.write("                    } else {\n");
      out.write("                        status.text(message ||'Waiting on your opponent to move.');\n");
      out.write("                        $('.game-cell-selectable')\n");
      out.write("                                .removeClass('game-cell-selectable');\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                move = function(row, column) {\n");
      out.write("                    if(!myTurn) {\n");
      out.write("                        modalErrorBody.text('It is not your turn yet!');\n");
      out.write("                        modalError.modal('show');\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                    if(server != null) {\n");
      out.write("                        server.send(JSON.stringify({ row: row, column: column }));\n");
      out.write("                        $('#r' + row + 'c' + column).unbind('click')\n");
      out.write("                                .removeClass('game-cell-selectable')\n");
      out.write("                                .addClass('game-cell-player game-cell-taken');\n");
      out.write("                        toggleTurn(false);\n");
      out.write("                    } else {\n");
      out.write("                        modalErrorBody.text('Not connected to came server.');\n");
      out.write("                        modalError.modal('show');\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/jsp/view/ticTacToe/game.jsp(10,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resource/stylesheet/ticTacToe.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/jsp/view/ticTacToe/game.jsp(76,32) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/jsp/view/ticTacToe/game.jsp(96,29) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/ticTacToe/${gameId}/${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_c_005furl_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_c_005furl_005f1.doInitBody();
      }
      do {
        if (_jspx_meth_c_005fparam_005f0(_jspx_th_c_005furl_005f1, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005furl_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue.reuse(_jspx_th_c_005furl_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005furl_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f1);
    // /WEB-INF/jsp/view/ticTacToe/game.jsp(97,32) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fparam_005f0.setName("action");
    // /WEB-INF/jsp/view/ticTacToe/game.jsp(97,32) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fparam_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${action}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
    if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
    return false;
  }
}
